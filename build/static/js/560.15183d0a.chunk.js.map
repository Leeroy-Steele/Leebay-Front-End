{"version":3,"file":"static/js/560.15183d0a.chunk.js","mappings":"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","sources":["components/HeaderLinks.js","components/PlainHeader.js","components/cards/BiddingOnAuctionCards.js","components/cards/MyAuctionCards.js","components/cards/WonAuctionCards.js","components/ProfilePage.js"],"sourcesContent":["import React from 'react'\r\nimport Container from '@mui/material/Container';\r\nimport Typography from '@mui/material/Typography';\r\nimport { NavLink, useNavigate, useLocation } from 'react-router-dom'\r\nimport { useAuth } from './Auth'  //For when logged in\r\nimport Box from '@mui/material/Box';\r\nimport Link from '@mui/material/Link';\r\n\r\nexport default function HeaderLinks(props) {\r\n\r\n  const auth = useAuth()  //For when logged in\r\n  const navigate = useNavigate()\r\n  const location = useLocation()\r\n\r\n  const handleLogout = ()=>{\r\n    console.log('logout code block')\r\n    auth.logout()\r\n\r\n    const redirectPath = location.state?.path || '/'  //define where to navigate to after logout\r\n    navigate(redirectPath, {replace: true}) \r\n\r\n  }\r\n\r\n  const handleProfileButton = ()=>{\r\n    const redirectPath = location.state?.path || props.linkTo  //define where to navigate to after logout\r\n    navigate(redirectPath, {replace: false}) \r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <Container sx={{ py: 0.2 , margin:\"auto\"}} maxWidth=\"md\">\r\n\r\n          {(auth.checkUserName()!==null)? //  if logged in show profile \r\n            <>\r\n\r\n              <Box\r\n                sx={{\r\n                    display:\"grid\",\r\n                    gridTemplateColumns:\"repeat(12, 1fr)\",\r\n                    height: 25,\r\n                }}>\r\n\r\n                <Box gridColumn=\"span 8\">\r\n                  <span> \r\n                    <Typography mt={0.5} variant=\"body2\">\r\n                    User {auth.checkUserName()} / \r\n                     {props.pageName}\r\n                    </Typography>\r\n                 </span>\r\n                </Box>\r\n                \r\n                <Box gridColumn=\"span 4\" textAlign='right'>\r\n\r\n                  <Link underline=\"hover\" component=\"button\" onClick={()=>{handleProfileButton()}} >{props.linkName} </Link>\r\n                  <Link underline=\"hover\" component=\"button\" onClick={()=>{handleLogout()}}> / Logout</Link>\r\n              \r\n                </Box>\r\n              </Box>\r\n              \r\n            </>\r\n            :\r\n            <>\r\n            <Typography mt={0.5} variant=\"body2\">\r\n                Hi!               \r\n                <NavLink to='/SignIn' > Sign in </NavLink>\r\n                or \r\n                <NavLink to='/SignUp' > Register </NavLink>\r\n              </Typography>\r\n            </>\r\n          }\r\n      \r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n","import * as React from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport StoreIcon from '@mui/icons-material/Store';\r\nimport { useNavigate, useLocation } from 'react-router-dom'\r\n\r\n\r\nexport default function ButtonAppBar() {\r\n\r\n  const navigate = useNavigate()\r\n  const location = useLocation()\r\n\r\n  const handleIconClick = ()=>{\r\n\r\n    const redirectPath = location.state?.path || '/'  //nav to home page \r\n    navigate(redirectPath, {replace: false}) \r\n\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            size=\"large\"\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            onClick={()=>{handleIconClick()}}\r\n            sx={{ mr: 0 }}\r\n          >\r\n            <StoreIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n            LEEBAY\r\n          </Typography>\r\n     \r\n        </Toolbar>\r\n      </AppBar>\r\n    </Box>\r\n  );\r\n}","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\n//for material card template\r\n\r\nimport Card from '@mui/material/Card';  \r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Typography from '@mui/material/Typography';\r\nimport Grid from '@mui/material/Grid';\r\nimport Container from '@mui/material/Container';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Divider from '@mui/material/Divider';\r\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\r\nimport AttachMoneyIcon from '@mui/icons-material/AttachMoney';\r\nimport ScheduleIcon from '@mui/icons-material/Schedule';\r\nimport { NavLink } from 'react-router-dom'\r\nimport moment from 'moment';  // for dates\r\n\r\nimport { useAuth } from '../Auth'  //For changing backend URL eg, localhost to AWS\r\n\r\n\r\nexport default function BiddingOnAuctionCards(props) {\r\n\r\n  const auth = useAuth()  //For changing backend URL eg, localhost to AWS\r\n\r\n  let [displayData, setDisplayData] = useState([])\r\n  let axiosRequestOptions = {}\r\n\r\n  useEffect(() => { // get all auction items on page load\r\n\r\n    if(props.bidder_id!==undefined){\r\n\r\n      axiosRequestOptions = {\r\n          method: 'GET',\r\n          url: `${auth.backendURL}/find-all-auction-items?bidder_id=${props.bidder_id}`,\r\n  \r\n      };\r\n    }\r\n    else{return}\r\n        \r\n      axios.request(axiosRequestOptions)\r\n          .then(res => {\r\n            console.log(res.data[0].auction_id)\r\n            setDisplayData(res.data)\r\n          })\r\n          .catch(err => {\r\n              console.log(err)\r\n          })\r\n\r\n    \r\n    },[]) //only run once on page load\r\n\r\n  return (\r\n    <div>\r\n\r\n      <Container sx={{ py: 4 , margin:\"auto\"}} maxWidth=\"lg\">\r\n\r\n        <Grid container spacing={4}>\r\n\r\n          {displayData.map((item, index) => (\r\n  \r\n              <Grid item key={item.auction_id} xs={12} sm={6} md={4}  xl={3}>\r\n              <Card\r\n                sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}\r\n              >\r\n                <Typography variant=\"h5\" component=\"h2\" textAlign='center'>\r\n                  {item.auction_title}\r\n                </Typography>\r\n\r\n                <NavLink to={`/ViewItem/${item.auction_id}`}> \r\n                  <CardMedia\r\n                    component=\"img\"\r\n                    sx={{pt: 0.5,height:300}}\r\n                    image={`${auth.backendURL}/get-auction-image?fileName=` + item.image_path} // Will change to AWS path - http://leebay-expressjs-backend-v2-dev602.ap-southeast-2.elasticbeanstalk.com/get-auction-image?fileName=\r\n                    alt=\"random\"\r\n                  />\r\n                </NavLink>\r\n\r\n                <CardContent sx={{ flexGrow: 1 }}>\r\n                  \r\n                  <Typography  sx={{minHeight:150}} gutterBottom variant=\"body2\">\r\n                    {item.item_description}\r\n                  </Typography>\r\n                  \r\n                  <List\r\n                    sx={{\r\n                      width: '100%',\r\n                      maxWidth: 360,\r\n                      bgcolor: 'background.paper',\r\n                    }}\r\n                  >\r\n\r\n                    <Divider component=\"li\" />\r\n\r\n                    <ListItem>\r\n                      <ListItemAvatar>\r\n                        <Avatar>\r\n                          <LocationOnIcon />\r\n                        </Avatar>\r\n                      </ListItemAvatar>\r\n                      <ListItemText primary=\"Location\" secondary={item.item_location} />\r\n                    </ListItem>\r\n\r\n                    <Divider variant=\"inset\" component=\"li\" />\r\n\r\n                    <ListItem>\r\n                      <ListItemAvatar>\r\n                        <Avatar>\r\n                          <AttachMoneyIcon />\r\n                        </Avatar>\r\n                      </ListItemAvatar>\r\n                      <ListItemText primary=\"Current Price\" secondary={\"$\"+ item.current_price} />\r\n                    </ListItem>\r\n\r\n                    <Divider variant=\"inset\" component=\"li\" />\r\n\r\n                    <ListItem>\r\n                      <ListItemAvatar>\r\n                        <Avatar>\r\n                          <ScheduleIcon />\r\n                        </Avatar>\r\n                      </ListItemAvatar>\r\n                      <ListItemText primary=\"Auction Ends\" secondary={moment(item.end_date).format('DD.MM.YYYY HH:mm')} />\r\n                    </ListItem>\r\n\r\n                  </List>\r\n\r\n\r\n                </CardContent>\r\n\r\n              </Card>\r\n              </Grid>\r\n\r\n            ))} \r\n            </Grid>\r\n        </Container>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\n//for material card template\r\nimport Card from '@mui/material/Card';  \r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Typography from '@mui/material/Typography';\r\nimport Grid from '@mui/material/Grid';\r\nimport Container from '@mui/material/Container';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Divider from '@mui/material/Divider';\r\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\r\nimport AttachMoneyIcon from '@mui/icons-material/AttachMoney';\r\nimport ScheduleIcon from '@mui/icons-material/Schedule';\r\nimport Button from '@mui/material/Button';\r\nimport { NavLink,useNavigate, useLocation } from 'react-router-dom'\r\nimport Stack from '@mui/material/Stack';\r\nimport Box from '@mui/material/Box';\r\n\r\n// for dates\r\nimport moment from 'moment';\r\n\r\nimport { useAuth } from '../Auth'  //For changing backend URL eg, localhost to AWS\r\n\r\n\r\nexport default function MyAuctionCards(props) {\r\n\r\n  const auth = useAuth()  //For changing backend URL eg, localhost to AWS\r\n\r\n  const navigate = useNavigate()\r\n  const location = useLocation()\r\n  \r\n  // console.log(props.seller_id)\r\n\r\n    let [displayData, setDisplayData] = useState([])\r\n    let axiosRequestOptions = {}\r\n\r\n\r\n    useEffect(() => { \r\n      fetchData() // get all auction items on page load\r\n      \r\n      },[])\r\n\r\n    let fetchData = () => {\r\n\r\n      if(props.seller_id!=undefined){ //Do i need this now ???????????????????????????????????\r\n\r\n        axiosRequestOptions = {\r\n            method: 'GET',\r\n            url: `${auth.backendURL}/find-all-auction-items?user_id=${props.seller_id}`,\r\n    \r\n        };\r\n      }\r\n      else{return}\r\n          \r\n        axios.request(axiosRequestOptions)\r\n            .then(res => {setDisplayData(res.data)})\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n\r\n      }\r\n\r\n     let handlChangePicture = (auctionID)=>{\r\n\r\n      const redirectPath = location.state?.path || '/UploadImage'  //define where to navigate to after submit \r\n      navigate(redirectPath, {state:{auction_id:auctionID}, replace: true}) //nav to upload images page\r\n\r\n      }\r\n\r\n      let handlDeleteAuction = (auctionID)=>{\r\n\r\n        const data = JSON.stringify({\r\n          \"auction_id\": auctionID,\r\n          \"delete_image\":true\r\n        });\r\n        \r\n        const config = {\r\n          method: 'delete',\r\n          url: 'http://leebay-expressjs-backend-v2-dev602.ap-southeast-2.elasticbeanstalk.com/delete-auction-item',\r\n          headers: { \r\n            'Content-Type': 'application/json'\r\n          },\r\n          data : data\r\n        };\r\n        \r\n        axios(config)\r\n        .then(function (response) {\r\n          // console.log(JSON.stringify(response.data));\r\n\r\n          fetchData()\r\n\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n\r\n      }\r\n\r\n  return (\r\n    <div>\r\n\r\n      <Container sx={{ py: 4 , margin:\"auto\"}} maxWidth=\"lg\">\r\n\r\n        <Grid container spacing={4}>\r\n\r\n          {displayData.map((item, index) => (\r\n\r\n            <Grid item key={item.auction_id} xs={12} sm={6} md={4}  xl={3}>\r\n            \r\n              <Card\r\n                sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}\r\n              >\r\n                <Typography variant=\"h5\" component=\"h2\" textAlign='center'>\r\n                  {item.auction_title}\r\n                </Typography>\r\n\r\n                <NavLink to={`/ViewItem/${item.auction_id}`}> \r\n                  <CardMedia\r\n                    component=\"img\"\r\n                    sx={{pt: 0.5,height:300}}\r\n                    image={`${auth.backendURL}/get-auction-image?fileName=${item.image_path}`} // Will change to AWS path - http://leebay-expressjs-backend-v2-dev602.ap-southeast-2.elasticbeanstalk.com/get-auction-image?fileName=\r\n                    alt=\"random\"\r\n                  />\r\n                </NavLink>\r\n\r\n                <Box\r\n                  sx={{\r\n                      display:\"grid\",\r\n                      gridTemplateColumns:\"repeat(12, 1fr)\",\r\n                      gap:1,\r\n                      mx: 'auto',\r\n                      mt:1,\r\n                  }}>\r\n                  <Stack spacing={1} direction=\"row\" gridColumn=\"span 12\">\r\n                    <Button size=\"small\" color='warning' onClick={()=>{handlChangePicture(item.auction_id)}}>\r\n                      Change Picture\r\n                    </Button>\r\n\r\n                    <Button size=\"small\" color='warning' onClick={()=>{handlDeleteAuction(item.auction_id)}}>\r\n                      Delete Auction\r\n                    </Button>\r\n                  </Stack>\r\n                </Box>\r\n\r\n                <CardContent sx={{ flexGrow: 1 }}>\r\n                  \r\n                  <Typography sx={{minHeight:150}} gutterBottom variant=\"body2\">\r\n                    {item.item_description}\r\n                  </Typography>\r\n                  \r\n                  <List\r\n                    sx={{\r\n                      width: '100%',\r\n                      maxWidth: 360,\r\n                      bgcolor: 'background.paper',\r\n                    }}\r\n                  >\r\n\r\n                    <Divider component=\"li\" />\r\n\r\n                    <ListItem>\r\n                      <ListItemAvatar>\r\n                        <Avatar>\r\n                          <LocationOnIcon />\r\n                        </Avatar>\r\n                      </ListItemAvatar>\r\n                      <ListItemText primary=\"Location\" secondary={item.item_location} />\r\n                    </ListItem>\r\n\r\n                    <Divider variant=\"inset\" component=\"li\" />\r\n\r\n                    <ListItem>\r\n                      <ListItemAvatar>\r\n                        <Avatar>\r\n                          <AttachMoneyIcon />\r\n                        </Avatar>\r\n                      </ListItemAvatar>\r\n                      <ListItemText primary=\"Current Price\" secondary={\"$\"+ item.current_price} />\r\n                    </ListItem>\r\n\r\n                    <Divider variant=\"inset\" component=\"li\" />\r\n\r\n                    <ListItem>\r\n                      <ListItemAvatar>\r\n                        <Avatar>\r\n                          <ScheduleIcon />\r\n                        </Avatar>\r\n                      </ListItemAvatar>\r\n                      <ListItemText primary=\"Auction Ends\" secondary={moment(item.end_date).format('DD.MM.YYYY HH:mm')} />\r\n                    </ListItem>\r\n\r\n                  </List>\r\n\r\n                </CardContent>\r\n\r\n              </Card>\r\n            </Grid>\r\n          ))} \r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport moment from 'moment';\r\n\r\n//for material card template\r\n\r\nimport Card from '@mui/material/Card';  \r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Typography from '@mui/material/Typography';\r\nimport Grid from '@mui/material/Grid';\r\nimport Container from '@mui/material/Container';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Divider from '@mui/material/Divider';\r\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\r\nimport AttachMoneyIcon from '@mui/icons-material/AttachMoney';\r\nimport ScheduleIcon from '@mui/icons-material/Schedule';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport AlternateEmailIcon from '@mui/icons-material/AlternateEmail';\r\n\r\nimport { useAuth } from '../Auth'  //For changing backend URL eg, localhost to AWS\r\n\r\n\r\n\r\nexport default function WonAuctionCards(props) {\r\n\r\n  const auth = useAuth()  //For changing backend URL eg, localhost to AWS\r\n\r\n  let [displayData, setDisplayData] = useState([])\r\n\r\n  useEffect(() => { // get all auction items on page load\r\n\r\n      const options = {\r\n          method: 'GET',\r\n          url: `${auth.backendURL}/find-all-expired-auction-items?highest_bidder_id=${props.buyer_id}`,\r\n  \r\n      };\r\n        \r\n      axios.request(options)\r\n          .then(res => {setDisplayData(res.data)})\r\n          .catch(err => {\r\n              console.log(err)\r\n          })\r\n\r\n          \r\n    },[]) //only run once on page load\r\n\r\n  return (\r\n    <div>\r\n\r\n      <Container sx={{ py: 4 , margin:\"auto\"}} maxWidth=\"lg\">\r\n\r\n        <Grid container spacing={4}>\r\n\r\n            {displayData.map((item, index) => (\r\n\r\n            <Grid item key={item.auction_id} xs={12} sm={6} md={4}  xl={3}>\r\n                <Card\r\n                  sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}\r\n                >\r\n                  <Typography variant=\"h5\" component=\"h2\" textAlign='center'>\r\n                    {item.auction_title}\r\n                  </Typography>\r\n                  \r\n                  <CardMedia\r\n                    component=\"img\"\r\n                    sx={{pt: 0.5,height:300}}\r\n                    image={`${auth.backendURL}/get-auction-image?fileName=${item.image_path}`} // Will change to AWS path - http://leebay-expressjs-backend-v2-dev602.ap-southeast-2.elasticbeanstalk.com/get-auction-image?fileName=\r\n                    alt=\"random\"\r\n                  />\r\n\r\n                  <CardContent sx={{ flexGrow: 1 }}>\r\n                    \r\n                    <Typography sx={{minHeight:150}} gutterBottom variant=\"body2\">\r\n                      {item.item_description}\r\n                    </Typography>\r\n                    \r\n                    <List\r\n                      sx={{\r\n                        width: '100%',\r\n                        maxWidth: 360,\r\n                        bgcolor: 'background.paper',\r\n                      }}\r\n                    >\r\n\r\n                      <Divider component=\"li\" />\r\n\r\n                      <ListItem>\r\n                        <ListItemAvatar>\r\n                          <Avatar>\r\n                            <LocationOnIcon />\r\n                          </Avatar>\r\n                        </ListItemAvatar>\r\n                        <ListItemText primary=\"Location\" secondary={item.item_location} />\r\n                      </ListItem>\r\n\r\n                      <Divider variant=\"inset\" component=\"li\" />\r\n\r\n                      <ListItem>\r\n                        <ListItemAvatar>\r\n                          <Avatar>\r\n                            <AttachMoneyIcon />\r\n                          </Avatar>\r\n                        </ListItemAvatar>\r\n                        <ListItemText primary=\"Winning Bid\" secondary={\"$\"+ item.sold_price} />\r\n                      </ListItem>\r\n\r\n                      <Divider variant=\"inset\" component=\"li\" />\r\n\r\n                      <ListItem>\r\n                        <ListItemAvatar>\r\n                          <Avatar>\r\n                            <ScheduleIcon />\r\n                          </Avatar>\r\n                        </ListItemAvatar>\r\n                        <ListItemText primary=\"Ended\" secondary={moment(item.end_date).format('DD.MM.YYYY HH:mm')} />\r\n                      </ListItem>\r\n\r\n                      <Divider component=\"li\" />\r\n\r\n                      <ListItem>\r\n                        <ListItemAvatar>\r\n                          <Avatar>\r\n                            <PersonIcon />\r\n                          </Avatar>\r\n                        </ListItemAvatar>\r\n                        <ListItemText primary=\"Seller Name\" secondary={item.seller_user_name} />\r\n                      </ListItem>\r\n\r\n                      <Divider variant=\"inset\" component=\"li\" />\r\n\r\n                      <ListItem>\r\n                        <ListItemAvatar>\r\n                          <Avatar>\r\n                            <AlternateEmailIcon />\r\n                          </Avatar>\r\n                        </ListItemAvatar>\r\n                        <ListItemText primary=\"Seller Email\" secondary={item.seller_email} />\r\n                      </ListItem>\r\n\r\n                    </List>\r\n\r\n       \r\n                  </CardContent>\r\n\r\n                </Card>\r\n              </Grid>\r\n\r\n            ))} \r\n            </Grid>\r\n        </Container>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport PlainHeader from './PlainHeader'\r\nimport HeaderLinks from './HeaderLinks'\r\nimport BiddingOnAuctionCards from './cards/BiddingOnAuctionCards'\r\nimport MyAuctionCards from './cards/MyAuctionCards'\r\nimport WonAuctionCards from './cards/WonAuctionCards'\r\nimport { useAuth } from './Auth'\r\nimport axios from 'axios'\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport { useNavigate, useLocation  } from 'react-router-dom'\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\n\r\nexport default function ProfilePage() {\r\n\r\n  const auth = useAuth()  //For when logged in\r\n  const navigate = useNavigate()\r\n  const location = useLocation()\r\n\r\n  let userName = auth.checkUserName()\r\n  let[email,setEmail]= useState('')\r\n  let [userID, setUserID] = useState(null)\r\n  \r\n  useEffect(()=>{\r\n\r\n    //load user details on page load\r\n    if(userName){\r\n    \r\n    var userData = JSON.stringify({\r\n      \"user_name\": userName\r\n\r\n    });\r\n    \r\n    var config = {\r\n      method: 'post',\r\n      url: `${auth.backendURL}/find-user`, // URL Will change to http://leebay-expressjs-backend-v2-dev602.ap-southeast-2.elasticbeanstalk.com/find-user\r\n      headers: { \r\n        'Content-Type': 'application/json'\r\n      },\r\n      data : userData\r\n    };\r\n    \r\n    axios(config)\r\n    .then(function (response) {\r\n\r\n      setEmail(response.data[0].email)\r\n      setUserID(response.data[0].user_id)\r\n\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n  }\r\n  },[])\r\n\r\n  // populate profile information table\r\n\r\n  function createData(label, value) {\r\n    return { label, value };\r\n  }\r\n  \r\n  const rows = [\r\n    createData('user name',userName),\r\n    createData('email',email),\r\n    createData('user ID',userID)\r\n  \r\n  ];\r\n\r\n  let handleDeleteAccount = ()=>{\r\n\r\n    const data = JSON.stringify({\r\n      \"user_id\": auth.checkUserID()\r\n    });\r\n    \r\n    const config = {\r\n      method: 'delete',\r\n      url: `${auth.backendURL}/delete-user`, // URL Will change to http://leebay-expressjs-backend-v2-dev602.ap-southeast-2.elasticbeanstalk.com/delete-user\r\n      headers: { \r\n        'Content-Type': 'application/json'\r\n      },\r\n      data : data\r\n    };\r\n    \r\n    axios(config)\r\n    .then(function (response) {\r\n   \r\n      auth.logout()\r\n      const redirectPath = location.state?.path || '/'  //navigate to home page after deleting account\r\n      navigate(redirectPath, {replace: true}) \r\n\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n\r\n  }\r\n\r\n  let handlePostAuction = ()=>{\r\n\r\n    const redirectPath = location.state?.path || '/PostAuction'  //navigate to post auction page\r\n    navigate(redirectPath, {replace: false}) \r\n\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <HeaderLinks pageName=' Profile' linkName='Home ' linkTo='/'/>\r\n      \r\n      <PlainHeader/>\r\n\r\n      {/* Profile Information section */}\r\n\r\n      <Typography\r\n          sx={{ textAlign: 'center',py: 2  }}\r\n          variant=\"h5\"\r\n          component=\"div\"\r\n        >\r\n          Profile Information\r\n      </Typography>\r\n\r\n      {userID!==null&&\r\n        <Box textAlign='center' sc={{p:1}}>\r\n          <Button onClick={handleDeleteAccount} variant='text'>\r\n          Delete Account\r\n          </Button>\r\n        </Box>\r\n      }\r\n\r\n      <TableContainer component={Paper}  sx={{ maxWidth: 400, margin:\"auto\", py:2 }}>\r\n        <Table aria-label=\"simple table\">\r\n    \r\n          <TableBody>\r\n            {rows.map((row) => (\r\n              <TableRow\r\n                key={row.label}\r\n                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n              >\r\n                <TableCell >\r\n                  {row.label}\r\n                </TableCell>\r\n                <TableCell align=\"left\">{row.value}</TableCell>\r\n\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n      {/* My auctions section */}\r\n      \r\n      <Box sx={{ textAlign: 'center',py: 2  }}>\r\n        <Typography\r\n            sx={{ py: 2  }}\r\n            variant=\"h5\"\r\n            component=\"div\"\r\n          >\r\n            My Auctions\r\n        </Typography>\r\n\r\n        {(userID!==null)? //  show when user data has been retrived (Stops backend error) \r\n\r\n          <>\r\n          <Box textAlign='center'>\r\n            <Button onClick={handlePostAuction} variant='text'>\r\n              Post Auction\r\n            </Button>\r\n          </Box>\r\n  \r\n          <MyAuctionCards seller_id={userID}/>\r\n          </>\r\n          :\r\n          <p>Not logged in</p>\r\n        }\r\n        \r\n      </Box>\r\n\r\n      {/* Currently Bidding on section */}\r\n\r\n      <Box sx={{ textAlign: 'center',py: 2  }}>\r\n        <Typography\r\n            sx={{ py: 2  }}\r\n            variant=\"h5\"\r\n            component=\"div\"\r\n          >\r\n            Currently Bidding on\r\n        </Typography>\r\n        \r\n        {(userID!==null)? //  show when user data has been retrived (Stops backend error) ****** first create bidding history data ******* \r\n          \r\n          <BiddingOnAuctionCards bidder_id={userID}/>\r\n          :\r\n          <p>Not logged in</p>\r\n        }\r\n        \r\n      </Box>\r\n\r\n      {/* Won Auctions section */}\r\n\r\n      <Box sx={{ textAlign: 'center',py: 2  }}>\r\n        <Typography\r\n            sx={{ py: 2  }}\r\n            variant=\"h5\"\r\n            component=\"div\"\r\n          >\r\n            Won Auctions\r\n        </Typography>\r\n        \r\n        {(userID!==null)? //  show when user data has been retrived (Stops backend error) \r\n          \r\n          <WonAuctionCards buyer_id={userID}/>\r\n          \r\n          :\r\n          <p>Not logged in</p>\r\n        }\r\n        \r\n      </Box>\r\n\r\n    </div>\r\n  )\r\n}\r\n"],"names":["HeaderLinks","props","auth","useAuth","navigate","useNavigate","location","useLocation","sx","py","margin","maxWidth","checkUserName","display","gridTemplateColumns","height","gridColumn","mt","variant","pageName","textAlign","underline","component","onClick","redirectPath","state","path","linkTo","replace","handleProfileButton","linkName","console","log","logout","handleLogout","to","ButtonAppBar","flexGrow","position","size","edge","color","handleIconClick","mr","BiddingOnAuctionCards","useState","displayData","setDisplayData","axiosRequestOptions","useEffect","undefined","bidder_id","method","url","backendURL","axios","then","res","data","auction_id","catch","err","Container","Grid","container","spacing","map","item","index","xs","sm","md","xl","Card","flexDirection","Typography","auction_title","CardMedia","pt","image","image_path","alt","CardContent","minHeight","gutterBottom","item_description","List","width","bgcolor","Divider","ListItem","ListItemAvatar","Avatar","LocationOn","ListItemText","primary","secondary","item_location","AttachMoney","current_price","Schedule","moment","end_date","format","MyAuctionCards","fetchData","seller_id","Box","gap","mx","Stack","direction","Button","auctionID","handlChangePicture","config","headers","JSON","stringify","response","error","handlDeleteAuction","WonAuctionCards","options","buyer_id","sold_price","Person","seller_user_name","AlternateEmail","seller_email","ProfilePage","userName","email","setEmail","userID","setUserID","createData","label","value","userData","user_id","rows","PlainHeader","sc","p","checkUserID","TableContainer","Paper","Table","TableBody","row","TableRow","border","TableCell","align"],"sourceRoot":""}